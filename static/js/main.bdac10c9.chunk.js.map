{"version":3,"sources":["ConversorCtoF.jsx","ConversorFtoC.jsx","ConversorCtoK.jsx","ConversorKtoC.jsx","TextoTotalChars.jsx","HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["ConversorCtoF","props","convertNumber","value","parseFloat","match","join","change","e","target","res","setState","celsius","fahrenheit","toFixed","state","className","id","type","this","onChange","readOnly","React","Component","ConversorFtoC","ConversorCtoK","kelvin","ConversorKtoC","TextoTotalChars","name","cols","rows","class","style","href","HomePage","moedas","from","resFrom","to","high","result","Intl","NumberFormat","maximumSignificantDigits","format","changeCripto","cripto","quote","openMoreInfo","isOpen","closeMoreInfo","code","axios","get","then","data","keys","Object","opacity","onClick","htmlFor","values","map","moeda","index","key","q","App","history","createBrowserHistory","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bdac10c9.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ConversorCtoF extends React.Component {\n    constructor(props) {\n        super(props);\n        debugger;\n        this.state = {\n            celsius: 0,\n            fahrenheit: 32\n        };\n    }\n\n    convertNumber = value => {\n        return parseFloat(value.match( /\\d+/g ).join(''));\n    };\n\n    change = e => {\n        if (e.target) {\n            const value = e.target.value;\n            const res = (value * 9/5) + 32;\n            this.setState({celsius: value, fahrenheit: res.toFixed(2)});\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"conversor\">\n                    <div>\n                        <label>Celsius (C°)</label>\n                        <input id=\"celsius\" type=\"number\" value={this.state.celsius} onChange={this.change}/>\n                    </div>\n                    <p className=\"equals\">=</p>\n                    <div>\n                        <label>Fahrenheit (°F)</label>\n                        <input id=\"fahrenheit\" type=\"number\" value={this.state.fahrenheit} readOnly/>\n                    </div>\n                </div>\n                <div>\n                    <p className=\"formula\">Fórmula</p>\n                    <p>({this.state.celsius || 0} °C × 9/5) + 32 = {this.state.fahrenheit} °F</p>\n                </div>\n\n                <div className=\"details\">\n                    <h1>Detalhes</h1>\n                    <p className=\"topic\">Celsius</p>\n                    <article>\n                        Embora inicialmente definido como ponto de congelação da água (e depois como ponto de fusão do gelo), a escala Celsius é agora oficialmente uma escala derivada, definida em relação à escala de temperatura Kelvin.\n                        <br/><br/>O zero na escala Celsius (0 °C) é agora definido como equivalente a 273,15 K, com uma diferença de temperatura de 1 °C equivalente a uma diferença de 1 K, ou seja, o tamanho da unidade em cada escala é a mesma. Isto significa que 100 °C, previamente definido como o ponto de ebulição da água, é agora definido como equivalente a 373,15 K.\n                        <br/><br/>A escala Celsius é um sistema de intervalo, mas não um sistema de relação, ou seja, segue uma escala relativa, mas não uma escala absoluta. Isto pode ser observado porque o intervalo de temperatura entre 20 °C e 30 °C é o mesmo que entre 30 °C e 40 °C, mas 40 °C não tem o dobro da energia térmica de um ar de 20 ° C.\n                        <br/><br/>A diferença de temperatura de 1 °C é equivalente a uma difer\n                    </article>\n\n                    <p className=\"topic\">Fahrenheit</p>\n                    <article>\n                        O Fahrenheit é uma escala de temperatura termodinâmica, onde o ponto de congelamento da água é de 32 graus Fahrenheit (°F) e o ponto de ebulição de 212 °F (com uma pressão atmosférica normal). Isso coloca os pontos de ebulição e de congelamento da água exatamente a 180 graus de separação. Por conseguinte, um grau na escala Fahrenheit é de 1/180 de intervalo entre o ponto de congelação e o ponto de ebulição da água. O zero absoluto é definido como igual a -459,67 °F.\n                        <br/><br/>A diferença de temperatura de 1 °F é o equivalente a uma diferença de temperatura de 0,556 °C.\n                    </article>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConversorCtoF;","import React from \"react\";\n\nclass ConversorFtoC extends React.Component {\n    constructor(props) {\n        super(props);\n        debugger;\n        this.state = {\n            celsius: 0,\n            fahrenheit: 32\n        };\n    }\n\n    convertNumber = value => {\n        return parseFloat(value.match( /\\d+/g ).join(''));\n    };\n\n    change = e => {\n        if (e.target) {\n            const value = e.target.value;\n            const res = (value - 32) * (5/9);\n            this.setState({fahrenheit: value, celsius: res.toFixed(2)});\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"conversor\">\n                    <div>\n                        <label>Fahrenheit (°F)</label>\n                        <input id=\"fahrenheit\" type=\"number\" value={this.state.fahrenheit} onChange={this.change}/>\n                    </div>\n                    <p className=\"equals\">=</p>\n                    <div>\n                        <label>Celsius (C°)</label>\n                        <input id=\"celsius\" type=\"number\" value={this.state.celsius} readOnly/>\n                    </div>\n                </div>\n                <div>\n                    <p className=\"formula\">Fórmula</p>\n                    <p>({this.state.fahrenheit} °F − 32) × 5/9 = {this.state.celsius} °C</p>\n                </div>\n\n                <div className=\"details\">\n                    <h1>Detalhes</h1>\n                    <p className=\"topic\">Celsius</p>\n                    <article>\n                        Embora inicialmente definido como ponto de congelação da água (e depois como ponto de fusão do gelo), a escala Celsius é agora oficialmente uma escala derivada, definida em relação à escala de temperatura Kelvin.\n                        <br/><br/>O zero na escala Celsius (0 °C) é agora definido como equivalente a 273,15 K, com uma diferença de temperatura de 1 °C equivalente a uma diferença de 1 K, ou seja, o tamanho da unidade em cada escala é a mesma. Isto significa que 100 °C, previamente definido como o ponto de ebulição da água, é agora definido como equivalente a 373,15 K.\n                        <br/><br/>A escala Celsius é um sistema de intervalo, mas não um sistema de relação, ou seja, segue uma escala relativa, mas não uma escala absoluta. Isto pode ser observado porque o intervalo de temperatura entre 20 °C e 30 °C é o mesmo que entre 30 °C e 40 °C, mas 40 °C não tem o dobro da energia térmica de um ar de 20 ° C.\n                        <br/><br/>A diferença de temperatura de 1 °C é equivalente a uma difer\n                    </article>\n\n                    <p className=\"topic\">Fahrenheit</p>\n                    <article>\n                        O Fahrenheit é uma escala de temperatura termodinâmica, onde o ponto de congelamento da água é de 32 graus Fahrenheit (°F) e o ponto de ebulição de 212 °F (com uma pressão atmosférica normal). Isso coloca os pontos de ebulição e de congelamento da água exatamente a 180 graus de separação. Por conseguinte, um grau na escala Fahrenheit é de 1/180 de intervalo entre o ponto de congelação e o ponto de ebulição da água. O zero absoluto é definido como igual a -459,67 °F.\n                        <br/><br/>A diferença de temperatura de 1 °F é o equivalente a uma diferença de temperatura de 0,556 °C.\n                    </article>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConversorFtoC;","import React from \"react\";\n\nclass ConversorCtoK extends React.Component {\n    constructor(props) {\n        super(props);\n        debugger;\n        this.state = {\n            kelvin: 273.15,\n            celsius: 0\n        };\n    }\n\n    convertNumber = value => {\n        return parseFloat(value.match( /\\d+/g ).join(''));\n    };\n\n    change = e => {\n        if (e.target) {\n            const value = this.convertNumber(e.target.value);\n            const res = value + 273.15;\n            this.setState({celsius: value, kelvin: res.toFixed(2)});\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"conversor\">\n                    <div>\n                        <label>Celsius (C°)</label>\n                        <input id=\"celsius\" type=\"number\" value={this.state.celsius} onChange={this.change}/>\n                    </div>\n                    <p className=\"equals\">=</p>\n                    <div>\n                        <label>Kelvin (K)</label>\n                        <input id=\"kelvin\" type=\"number\" value={this.state.kelvin} readOnly/>\n                    </div>\n                </div>\n                <div>\n                    <p className=\"formula\">Fórmula</p>\n                    <p>{this.state.celsius} °C + 273,15 = {this.state.kelvin} K</p>\n                </div>\n\n                <div className=\"details\">\n                    <h1>Detalhes</h1>\n                    \n                    <p className=\"topic\">Calor e Temperatura</p>\n                    <article>\n                        O Calor é a energia transferida de um corpo para o outro quando existe diferença de temperatura. \n                        <br/>Já temperatura é a medida de agitação das moléculas.  \n                        <br/>Por exemplo: ao colocarmos gelo no suco, as moléculas do suco estão mais agitadas do que as do gelo. \n                        <br/>Por isso dizemos que a temperatura do suco é maior que a do gelo ou que o suco é mais quente que o gelo. \n                        <br/>Quando colocamos eles em contato ocorre transferência de energia. \n                        <br/>Consequentemente, o gelo esquenta e o suco esfria.\n                    </article>\n                    \n                    <p className=\"topic\">Celsius</p>\n                    <article>\n                        Embora inicialmente definido como ponto de congelação da água (e depois como ponto de fusão do gelo), a escala Celsius é agora oficialmente uma escala derivada, definida em relação à escala de temperatura Kelvin.\n                        <br/><br/>O zero na escala Celsius (0 °C) é agora definido como equivalente a 273,15 K, com uma diferença de temperatura de 1 °C equivalente a uma diferença de 1 K, ou seja, o tamanho da unidade em cada escala é a mesma. Isto significa que 100 °C, previamente definido como o ponto de ebulição da água, é agora definido como equivalente a 373,15 K.\n                        <br/><br/>A escala Celsius é um sistema de intervalo, mas não um sistema de relação, ou seja, segue uma escala relativa, mas não uma escala absoluta. Isto pode ser observado porque o intervalo de temperatura entre 20 °C e 30 °C é o mesmo que entre 30 °C e 40 °C, mas 40 °C não tem o dobro da energia térmica de um ar de 20 ° C.\n                        <br/><br/>A diferença de temperatura de 1 °C é equivalente a uma difer\n                    </article>\n\n                    <p className=\"topic\">Kelvin</p>\n                    <article>\n                        <br/><br/>William Tomson (conhecido como Lord Kelvin) estudando o comportamento do gases, descobriu a menor temperatura que um corpo poderia atingir, que seria equivalente a -273°C. \n                        <br/><br/>A partir daí determinou o ponto zero de sua escala. Criou assim o que chamamos de escala absoluta, pois utiliza um fenômeno universal como referência. \n                        <br/><br/>Nela a água congela em 273 Kelvin (K) e ferve a 373 K - repare que não utilizamos graus, pois esta é a escala absoluta e não uma comparação entre fenômenos como as outras escalas.\n                    </article>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConversorCtoK;","import React from \"react\";\n\nclass ConversorKtoC extends React.Component {\n    constructor(props) {\n        super(props);\n        debugger;\n        this.state = {\n            celsius: -273.5,\n            kelvin: 0\n        };\n    }\n\n    convertNumber = value => {\n        return parseFloat(value.match( /\\d+/g ).join(''));\n    };\n\n    change = e => {\n        if (e.target) {\n            const value = this.convertNumber(e.target.value);\n            debugger;\n            const res = value - 273.15;\n            this.setState({kelvin: value, celsius: res.toFixed(2)});\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"conversor\">\n                    <div>\n                        <label>Kelvin (K)</label>\n                        <input id=\"kelvin\" type=\"number\" value={this.state.kelvin} onChange={this.change}/>\n                    </div>\n                    <p className=\"equals\">=</p>\n                    <div>\n                        <label>Celsius (C°)</label>\n                        <input id=\"celsius\" type=\"number\" value={this.state.celsius} readOnly/>\n                    </div>\n                </div>\n                <div>\n                    <p className=\"formula\">Fórmula</p>\n                    <p>{this.state.kelvin} K − 273,15 = {this.state.celsius} °C</p>\n                </div>\n\n                <div className=\"details\">\n                    <h1>Detalhes</h1>\n                    <p className=\"topic\">Celsius</p>\n                    <article>\n                        Embora inicialmente definido como ponto de congelação da água (e depois como ponto de fusão do gelo), a escala Celsius é agora oficialmente uma escala derivada, definida em relação à escala de temperatura Kelvin.\n                        <br/><br/>O zero na escala Celsius (0 °C) é agora definido como equivalente a 273,15 K, com uma diferença de temperatura de 1 °C equivalente a uma diferença de 1 K, ou seja, o tamanho da unidade em cada escala é a mesma. Isto significa que 100 °C, previamente definido como o ponto de ebulição da água, é agora definido como equivalente a 373,15 K.\n                        <br/><br/>A escala Celsius é um sistema de intervalo, mas não um sistema de relação, ou seja, segue uma escala relativa, mas não uma escala absoluta. Isto pode ser observado porque o intervalo de temperatura entre 20 °C e 30 °C é o mesmo que entre 30 °C e 40 °C, mas 40 °C não tem o dobro da energia térmica de um ar de 20 ° C.\n                        <br/><br/>A diferença de temperatura de 1 °C é equivalente a uma difer\n                    </article>\n\n                    <p className=\"topic\">Fahrenheit</p>\n                    <article>\n                        O Fahrenheit é uma escala de temperatura termodinâmica, onde o ponto de congelamento da água é de 32 graus Fahrenheit (°F) e o ponto de ebulição de 212 °F (com uma pressão atmosférica normal). Isso coloca os pontos de ebulição e de congelamento da água exatamente a 180 graus de separação. Por conseguinte, um grau na escala Fahrenheit é de 1/180 de intervalo entre o ponto de congelação e o ponto de ebulição da água. O zero absoluto é definido como igual a -459,67 °F.\n                        <br/><br/>A diferença de temperatura de 1 °F é o equivalente a uma diferença de temperatura de 0,556 °C.\n                    </article>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConversorKtoC;","import React from \"react\";\n\nclass TextoTotalChars extends React.Component {\n    constructor(props) {\n        super(props);\n        debugger;\n        this.state = {\n            celsius: 0,\n            fahrenheit: 32\n        };\n    }\n\n    convertNumber = value => {\n        return parseFloat(value.match( /\\d+/g ).join(''));\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Esta é uma calculadora on-line grátis que conta o número de caracteres ou letras num texto, útil para os seus tweets no Twitter, bem como uma infinidade de outros aplicativos.\n\nQuer se trate de Snapchat, Twitter, Facebook ou somente uma nota para colegas de trabalho ou funcionários empresariais, o número de caracteres totais é importante. O que é dito pode não ser tão importante quanto a forma como é dito ou o número de caracteres usados.\n</h1>\n\n                <div>\n                    <p>Escreve o cole o texto nesse online contador de caracteres:</p>\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n                </div>\n\n                <div>\n                    <h4 class=\"topicTitles\">Limites de caracteres do Facebook:</h4>\n                    <p>\n                        Como qualquer outro site de redes sociais, o Facebook tem requisitos de comprimento quando se trata de escrever no Facebook, no seu estado, mensagens e comentários. Compreender quantos caracteres podem ser usados, permite o uso efetivo do Facebook como uma ferramenta comercial ou de campanha.<br/>\n                        <br/>\n                        A <b>mensagem privada via Facebook Messenger</b> é uma das principais formas de interação entre as pessoas no Facebook. Esse tipo de mensagem direta pode ser uma mensagem instantânea (bate-papo) ou uma mensagem normal do tipo de e-mail. Nas mensagens instantâneas e regulares, existe um limite de <b>20 000 caracteres</b>. <br/>\n                        <br/>\n                        O <b>status do Facebook</b> pode ter limites de caracteres, mas considerando que tem um limite de 63.206 caracteres, a menos que você esteja escrevendo a <i>Guerra e Paz</i>, está tudo bem. O Facebook mudou este número 12 vezes para caber o estado e o feedback de usuário.<br/>\n                        <br/>\n                        <b>As postagens no Facebook</b> têm um limite de 63.206 caracteres, mas <b>começa</b> com 477 caracteres. Isso permite que alguém escreva uma resposta pensada ou crie algo semelhante a um blog.<br/>\n                        <br/>\n                        Uma área que raramente é usada no Facebook é a seção <b>Notas</b>. É uma área de escrita que muitos blogueiros acham útil. A razão é porque as <b>Facebook Notes</b> não possuem um limite de caracteres, até ao momento. Os usuários são direcionados para essa área se tiverem feito um estado ou comentários muito longos. Isso pode ser usado para beneficiar alguém que queira fazer um post mais longo e deseje compartilhá-lo com os seus amigos marcando-os.<br/>\n                        <br/>\n                        No Facebook, os usuários carregam e publicam novas fotos todos os dias. Ao carregar imagens, os usuários podem precisar escrever uma descrição, com menos de 63.206 caracteres. Quando é carregado, alguns amigos comentarão sobre o post, o que deve dar-lhes um limite de caracteres de 8000 caracteres.<br/>\n                        <br/>\n                        Um nome de usuário da conta do Facebook tem um limite de 50 caracteres.<br/>\n                        <br/>\n                        Ao criar uma página no Facebook, também há um limite de 255 caracteres para a descrição ou breve resumo.<br/>\n                        <br/>\n                        Para resumir os limites de caracteres do Facebook:\n                    </p>\n                    <ul style=\"margin-left:50px\">\n\t\t\t\t\t\t<li>sistema de mensagens / mensageiro privado: 20.000 caracteres no total para uma única mensagem</li>\n\t\t\t\t\t\t<li>status / postagens no mural / feed de notícias em postagens longas: 63.206 caracteres no máximo</li>\n\t\t\t\t\t\t<li>descrições de imagens: menos de 63.206 caracteres <br/>[63.206 - o tamanho da imagem (por exemplo, 2.048 ou qualquer tamanho) = mais ou menos 60.000 caracteres]</li>\n\t\t\t\t\t\t<li>comentários de foto / postagem: não pode ter mais de 8.000 caracteres</li>\n\t\t\t\t\t\t<li>nome de usuário da conta: limite de 50 caracteres</li>\n\t\t\t\t\t\t<li>descrição da página ou breve resumo: limite de 255 caracteres</li>\n\t\t\t\t\t  </ul>\n\n                      <h4 class=\"topicTitles\">Como as letras são escritas e contabilizadas</h4>\n                      <p>Na sociedade atual e moderna, as letras vêm em todas as formas. Usamos letras para nos comunicarmos com outras pessoas em qualquer lugar do mundo. No mundo dos negócios, os funcionários criam letras comerciais numa dada altura e incluem a contagem dos caracteres. Para simplificarem a sua vida, as pessoas utilizam software para escrever no documento e contar o número de palavras e caracteres que usam. Outra forma de <a href=\"https://www.quantasletras.com/\">contar o número de caracteres</a> ou palavras em letras é através dum contador de caracteres on-line.</p>\n                      <p>Quando um texto ou artigo está escrito, é importante conhecer o <a href=\"https://www.quantasletras.com/\">número de caracteres ou letras</a>. Sabemos que temos que expressar o que sentimos e como deve ser retratado. E pode não ser fácil contar o número exato de letras, especialmente se for feito manualmente. Se a contagem de caracteres for necessária, pode parecer uma tarefa chata e assustadora. No entanto, existem programas ou contadores de caracteres para fazer a contagem para você. Desta forma, escrever o que é necessário é simples e o software fará toda a contagem dos caracteres.</p>\n                      <p>Depois de você escrever um artigo ou texto, permita que o programa conte o número de caracteres que foram escritos. Isso deve dar uma ideia da contagem, e <a href=\"https://www.quantasletras.com/\">quantas letras</a> ainda precisam ser escritas. Lembre-se sempre que a contagem de caracteres inclui todos os caracteres numa frase e não somente as letras. É assim que os sites contam os caracteres quando têm um limite no tamanho do texto, muitas vezes incluindo os espaços entre as letras.</p>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default TextoTotalChars;","import React from \"react\";\nimport axios from \"axios\";\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            moedas: [],\n            from: \"USD\",\n            to: \"BRL\",\n            result: 0,\n            cripto: {\n                value: 0,\n                moedas: [{code: \"BRL\", name: \"Real Brasileiro\"}, {code: \"USD\", name: \"Dolar Americano\"}, {code: \"AUD\", name: \"Dolar Australiano\"}, {code: \"CAD\", name: \"Dolar Canadense\"}, {code: \"EUR\", name: \"Euro\"}, {code: \"GBP\", name: \"Libra Esterlina\"}],\n                quote: {},\n                to: \"BRL\",\n                result: 0,\n                isOpen: false\n            }\n        };\n    }\n\n    componentDidMount() {\n        axios.get(\"https://economia.awesomeapi.com.br/json/all\").then(res => {\n            this.setState({moedas: res.data});\n        });\n\n        axios.get(\"https://blockchain.info/ticker\").then(res => this.setState({\n            cripto: {...this.state.cripto, quote: res.data, keys: Object.keys(res.data)},\n        }));\n    }\n\n    change = e => {\n        this.setState({[e.target.id]: e.target.value}, () => {\n            const {moedas, from, to, value} = this.state;\n            const resFrom = value * parseFloat(moedas[from].high);\n            this.setState({result: new Intl.NumberFormat('pt-BR', { maximumSignificantDigits: 3 }).format(resFrom)});\n        });\n    };\n\n    changeCripto = e => {\n        this.setState({cripto: {...this.state.cripto, [e.target.id]: e.target.value}}, () => {\n            debugger;\n            const {quote, to, value} = this.state.cripto;\n            const resFrom = value * parseFloat(quote[to][\"15m\"]);\n            const result = new Intl.NumberFormat('pt-BR', { maximumSignificantDigits: 3 }).format(resFrom);\n            this.setState({cripto: {...this.state.cripto, result}});\n        });\n    };\n\n    openMoreInfo = target => {\n        if (target === \"cripto\") return this.setState({cripto: {...this.state.cripto, isOpen: true}});\n    };\n\n    closeMoreInfo = target => {\n        if (target === \"cripto\") return this.setState({cripto: {...this.state.cripto, isOpen: false}});\n    };\n\n    render() {\n        return (\n            <main>\n                <nav id=\"cripto\" className=\"info\" style={{opacity: this.state.cripto.isOpen ? 1 : 0}}>\n                    <small className=\"close\" onClick={() => this.closeMoreInfo(\"cripto\")}>[ x ]</small>\n                    <h1>O que é Bitcoin?</h1>\n                    <p>É uma criptomoeda descentralizada ou um dinheiro eletrônico para transações ponto-a-ponto (peer-to-peer electronic cash system) \n                        apresentada em 2008, na lista de discussão The Cryptography Mailing por um programador ou grupo de programadores \n                        sob o pseudônimo Satoshi Nakamoto, é considerada a primeira moeda digital mundial descentralizada, constituindo um sistema econômico \n                        alternativo (peer-to-peer electronic cash system), e responsável pelo ressurgimento do sistema bancário livre.</p>\n                    \n                    <h1>O que é CriptoMoedas?</h1>\n                    <p>Uma criptomoeda é um meio de troca, podendo ser centralizado ou descentralizado que se utiliza da tecnologia de blockchain e da criptografia para assegurar a validade das transações e a criação de novas unidades da moeda</p>\n                </nav>\n\n                <section>\n                    <h1>Conversão Rápida</h1>\n                    <p>Acesse nossos conversores mais populares abaixo para converter rapidamente taxas de moeda, distância, temperatura, área e muito mais. \n                        Para acessar todos os nossos conversores, navegue no menu acima.</p>\n                </section>\n\n                {/* MOEDAS */}\n                <section className=\"grid\">\n                    <div className=\"card\">\n                        <p className=\"title\">Moeda</p>\n                        <div className=\"column\">\n                            <label htmlFor=\"from\" className=\"lb\">Quero converter BRL</label>\n                            <input id=\"value\" type=\"text\" value={this.state.value} onChange={this.change}/>\n\n                            <label htmlFor=\"from\" className=\"lb\">Para</label>\n                            <select id=\"from\" name=\"from\" value={this.state.from} onChange={this.change}>\n                                {Object.values(this.state.moedas).map((moeda, index) => {\n                                    return (\n                                        <option key={index} value={moeda.code}>{moeda.name}({moeda.code})</option>\n                                    );\n                                })}\n                            </select>\n                            {/* <label htmlFor=\"to\">Para</label>\n                            <select id=\"to\" name=\"to\" value={this.state.to} onChange={this.change}>\n                                {Object.values(this.state.moedas).map((moeda, index) => {\n                                    return (\n                                        <option key={index} value={moeda.code}>{moeda.name}({moeda.code})</option>\n                                    );\n                                })}\n                            </select> */}\n                            <p className=\"result\">({this.state.from} - BRL): R$ {this.state.result}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"card\">\n                        <p className=\"title\">Bitcoin</p>\n                        <div className=\"column\">\n                            <label className=\"lb\">Quero converter Bitcoin (BTC)</label>\n                            <input id=\"value\" type=\"text\" value={this.state.cripto.value} onChange={this.changeCripto}/>\n                            \n                            <label htmlFor=\"to\" className=\"lb\">Para</label>\n                            <select id=\"to\" name=\"to\" value={this.state.cripto.to} onChange={this.changeCripto}>\n                                {this.state.cripto.moedas.map((moeda, index) => {\n                                    return (\n                                        <option key={index} value={moeda.code}>{moeda.name}({moeda.code})</option>\n                                    );\n                                })}\n                            </select>\n                            <p className=\"result\">{this.state.cripto.to} {this.state.cripto.result}</p>\n                        </div>\n                        <div className=\"actions\">\n                            <button onClick={() => this.openMoreInfo(\"cripto\")}>Mais Informações</button>\n                        </div>\n                    </div>\n\n                    <div className=\"card\">\n                        <p className=\"title\">Cripto Moedas</p>\n                        <div className=\"column\">\n                            <div className=\"list-moedas\">\n                                {Object.values(this.state.cripto.quote).map((q, index) => (\n                                    <div key={index} className=\"items\" style={{\"background-color\": index % 2 === 0 ? \"#f1f2f3\" : \"aliceblue\"}}>\n                                        <label>{this.state.cripto.keys[index]}</label>\n                                        &nbsp;\n                                        <label>{q[\"15m\"]}</label>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n\n                {/* COMPRIMENTO e VOLUME */}\n                <section className=\"grid\">\n                    <div className=\"card\">\n                        <p className=\"title\">Comprimento</p>\n                        <div className=\"column\">\n                            <label htmlFor=\"from\" className=\"lb\">Quero converter:</label>\n                            <input id=\"value\" type=\"text\" value={this.state.value} onChange={this.change}/>\n\n                            <label htmlFor=\"from\" className=\"lb\">Para</label>\n                            <select id=\"from\" name=\"from\" value={this.state.from} onChange={this.change}>\n                                {Object.values(this.state.moedas).map((moeda, index) => {\n                                    return (\n                                        <option key={index} value={moeda.code}>{moeda.name}({moeda.code})</option>\n                                    );\n                                })}\n                            </select>\n                            {/* <label htmlFor=\"to\">Para</label>\n                            <select id=\"to\" name=\"to\" value={this.state.to} onChange={this.change}>\n                                {Object.values(this.state.moedas).map((moeda, index) => {\n                                    return (\n                                        <option key={index} value={moeda.code}>{moeda.name}({moeda.code})</option>\n                                    );\n                                })}\n                            </select> */}\n                            <p className=\"result\">({this.state.from} - BRL): R$ {this.state.result}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"card\">\n                        <p className=\"title\">Bitcoin</p>\n                        <div className=\"column\">\n                            <label className=\"lb\">Quero converter Bitcoin (BTC)</label>\n                            <input id=\"value\" type=\"text\" value={this.state.cripto.value} onChange={this.changeCripto}/>\n                            \n                            <label htmlFor=\"to\" className=\"lb\">Para</label>\n                            <select id=\"to\" name=\"to\" value={this.state.cripto.to} onChange={this.changeCripto}>\n                                {this.state.cripto.moedas.map((moeda, index) => {\n                                    return (\n                                        <option key={index} value={moeda.code}>{moeda.name}({moeda.code})</option>\n                                    );\n                                })}\n                            </select>\n                            <p className=\"result\">{this.state.cripto.to} {this.state.cripto.result}</p>\n                        </div>\n                        <div className=\"actions\">\n                            <button onClick={() => this.openMoreInfo(\"cripto\")}>Mais Informações</button>\n                        </div>\n                    </div>\n\n                    <div className=\"card\">\n                        <p className=\"title\">Cripto Moedas</p>\n                        <div className=\"column\">\n                            <div className=\"list-moedas\">\n                                {Object.values(this.state.cripto.quote).map((q, index) => (\n                                    <div key={index} className=\"items\" style={{\"background-color\": index % 2 === 0 ? \"#f1f2f3\" : \"aliceblue\"}}>\n                                        <label>{this.state.cripto.keys[index]}</label>\n                                        &nbsp;\n                                        <label>{q[\"15m\"]}</label>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n\n\n                {/* SOBRE/ABOUT */}\n                <section>\n                    <h1>Conversor Online</h1>\n                    <p>\n                        O Conversor Online é um dos serviços de conversão de unidades mais utilizados no mundo. \n                        Você pode descobrir rapidamente quantas libras é um quilo, quantos dólares é um euro, quantos centímetros é um pé, bem como tamanhos de papel, \n                        tamanhos de sapato, área, volume, temperatura e muito mais. \n                        Use nossas calculadoras para moeda, peso, distância e praticamente qualquer unidade de medida no mundo.\n                        As unidades de medida foram uma das primeiras ferramentas desenvolvidas pelos seres humanos e os registros voltam para o 4º para o 3º milênio aC de lugares \n                        como o Egito e o vale do Indo.\n                    </p>\n                </section>\n\n                <footer>\n                    <div>\n                        <ol>\n                            <li>\n                            <a href=\"/conversores-online/#/coverter/celsius-fahrenheit\">Celsius p/ Fahrenheit</a>\n                            </li>\n                            <li>\n                            <a href=\"/conversores-online/#/coverter/fahrenheit-celsius\">Fahrenheit p/ Celsius</a>\n                            </li>\n                            <li>\n                            <a href=\"/conversores-online/#/coverter/kelvin-celsius\">Kelvin p/ Celsius</a>\n                            </li>\n                            <li>\n                            <a href=\"/conversores-online/#/coverter/celsius-kelvin\">Celsius p/ Kelvin</a>\n                            </li>\n                        </ol>\n                    </div>\n                </footer>\n            </main>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport {createBrowserHistory} from \"history\";\nimport ConversorCtoF from \"./ConversorCtoF\";\nimport ConversorFtoC from \"./ConversorFtoC\";\nimport ConversorCtoK from \"./ConversorCtoK\";\nimport ConversorKtoC from \"./ConversorKtoC\";\n\nimport TextoTotalChars from \"./TextoTotalChars\";\n\nimport HomePage from \"./HomePage\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header></header>\n      <div className=\"content\">\n        <nav>\n          <p className=\"menu-title\">Conversores</p>\n          <ol>\n            <li>\n              <a href=\"/#/coverter/celsius-fahrenheit\">Celsius p/ Fahrenheit</a>\n            </li>\n            <li>\n              <a href=\"/#/coverter/fahrenheit-celsius\">Fahrenheit p/ Celsius</a>\n            </li>\n            <li>\n              <a href=\"/#/coverter/kelvin-celsius\">Kelvin p/ Celsius</a>\n            </li>\n            <li>\n              <a href=\"/#/coverter/celsius-kelvin\">Celsius p/ Kelvin</a>\n            </li>\n          </ol>\n          <p className=\"menu-title\">Cotações</p>\n          <ol>\n            <li>\n              <a href=\"/#/cotacao/dolar-real\">Dólar para Real</a>\n            </li>\n            <li>\n              <a href=\"/#/cotacao/euro-real\">Euro para Real</a>\n            </li>\n            <li>\n              <a href=\"/#/cotacao/libra-real\">Libra para Real</a>\n            </li>\n          </ol>\n          <p className=\"menu-title\">Texto</p>\n          <ol>\n            <li>\n              <a href=\"/#/texto/total-caracteres\">Total de Caracteres</a>\n            </li>\n            <li>\n              <a href=\"/#/texto/maiusculo\">Converter p/ maiúsculo</a>\n            </li>\n            <li>\n              <a href=\"/#/cotacao/minusculo\">Converter p/ minúsculo</a>\n            </li>\n          </ol>\n        </nav>\n        <main>\n          <HashRouter history={createBrowserHistory()}>\n            <Switch>\n            <Route exact path=\"/\" component={HomePage}/>\n              <Route exact path=\"/coverter/celsius-fahrenheit\" component={ConversorCtoF}/>\n              <Route exact path=\"/coverter/fahrenheit-celsius\" component={ConversorFtoC}/>\n              <Route exact path=\"/coverter/kelvin-celsius\" component={ConversorKtoC}/>\n              <Route exact path=\"/coverter/celsius-kelvin\" component={ConversorCtoK}/>\n\n              <Route exact path=\"/texto/total-caracteres\" component={TextoTotalChars}/>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}